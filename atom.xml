<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MiZhuo</title>
  <icon>https://www.gravatar.com/avatar/66181c53243a8aa70e5b1971b944717c</icon>
  
  <link href="https://mizhuo.site/atom.xml" rel="self"/>
  
  <link href="https://mizhuo.site/"/>
  <updated>2022-07-11T03:08:06.020Z</updated>
  <id>https://mizhuo.site/</id>
  
  <author>
    <name>MiZhuo</name>
    <email>mizhuo809@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot整合ELFK实现查看日志自由</title>
    <link href="https://mizhuo.site/SpringBoot%E6%95%B4%E5%90%88ELFK%E5%AE%9E%E7%8E%B0%E6%9F%A5%E7%9C%8B%E6%97%A5%E5%BF%97%E8%87%AA%E7%94%B1/"/>
    <id>https://mizhuo.site/SpringBoot%E6%95%B4%E5%90%88ELFK%E5%AE%9E%E7%8E%B0%E6%9F%A5%E7%9C%8B%E6%97%A5%E5%BF%97%E8%87%AA%E7%94%B1/</id>
    <published>2022-07-08T02:28:06.000Z</published>
    <updated>2022-07-11T03:08:06.020Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;之前讲过如何使用Docker安装ELK,本章来讲讲如何使用SpringBoot整合ELK以及ELFK,从而实现日志自由,再也不用跑服务器上捞日志了。&lt;/p&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="ELK" scheme="https://mizhuo.site/tags/ELK/"/>
    
    <category term="SpringBoot" scheme="https://mizhuo.site/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>Arthas真的好用吗</title>
    <link href="https://mizhuo.site/Arthas%E7%9C%9F%E7%9A%84%E5%A5%BD%E7%94%A8%E5%90%97/"/>
    <id>https://mizhuo.site/Arthas%E7%9C%9F%E7%9A%84%E5%A5%BD%E7%94%A8%E5%90%97/</id>
    <published>2022-07-06T14:33:50.000Z</published>
    <updated>2022-07-13T14:34:06.467Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;Arthas介绍&quot;&gt;&lt;a href=&quot;#Arthas介绍&quot; class=&quot;headerlink&quot; title=&quot;Arthas介绍&quot;&gt;&lt;/a&gt;Arthas介绍&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Arthas&lt;/code&gt; 是Alibaba开源的Java诊断工具,一般用于排查线上比较难以定位以及线下难以重现的问题,采用命令式交互模式,简单易上手,可以实时无侵入的监控JVM状态,以及动态追踪JAVA代码,并且可以动态替换class文件。&lt;/p&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="Arthas" scheme="https://mizhuo.site/tags/Arthas/"/>
    
  </entry>
  
  <entry>
    <title>Spring事务的7种传播行为</title>
    <link href="https://mizhuo.site/Spring%E4%BA%8B%E5%8A%A1%E7%9A%847%E7%A7%8D%E4%BC%A0%E6%92%AD%E8%A1%8C%E4%B8%BA/"/>
    <id>https://mizhuo.site/Spring%E4%BA%8B%E5%8A%A1%E7%9A%847%E7%A7%8D%E4%BC%A0%E6%92%AD%E8%A1%8C%E4%B8%BA/</id>
    <published>2022-06-25T04:42:30.000Z</published>
    <updated>2022-07-03T14:04:47.912Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;事务&quot;&gt;&lt;a href=&quot;#事务&quot; class=&quot;headerlink&quot; title=&quot;事务&quot;&gt;&lt;/a&gt;事务&lt;/h4&gt;&lt;p&gt;说到事务,大家都很熟悉,事务是数据库逻辑处理的基本单元,一般由一条或多条甚至是整个程序组成,事务保证成批的SQL要么全部执行,要么全部不执行。但是也存在一个问题,如果一个事务方法被另一个事务方法调用时,事务该如何管理呢?被调用的方法是在现有的事务中运行还是创建一个新事务并运行呢？因此在Spring中,将数据库事务定义了7个传播行为,分别对应着7种不同的方案。&lt;/p&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="Spring" scheme="https://mizhuo.site/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>JAVA设计模式详解</title>
    <link href="https://mizhuo.site/JAVA%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3/"/>
    <id>https://mizhuo.site/JAVA%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E8%AF%A6%E8%A7%A3/</id>
    <published>2021-08-17T13:48:10.000Z</published>
    <updated>2022-06-24T09:22:01.949Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;JAVA设计模式分类&quot;&gt;&lt;a href=&quot;#JAVA设计模式分类&quot; class=&quot;headerlink&quot; title=&quot;JAVA设计模式分类&quot;&gt;&lt;/a&gt;JAVA设计模式分类&lt;/h4&gt;&lt;p&gt;设计模式主要分为三大类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建型&lt;blockquote&gt;
&lt;p&gt;工厂方法、抽象工厂方法、单例模式、建造者模式、原型模式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;结构型&lt;blockquote&gt;
&lt;p&gt;适配器模式、桥接模式、组合模式、装饰器模式、外观模式、享元模式、代理模式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;行为型&lt;blockquote&gt;
&lt;p&gt;责任链模式、命令模式、解释器模式、迭代器模式、中介者模式、备忘录模式、策略模式、模板方法模式、观察者模式、状态模式、访问者模式&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="设计模式" scheme="https://mizhuo.site/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>DB2 SQLCODE=-802,SQLSTATE=22003原因剖析</title>
    <link href="https://mizhuo.site/DB2%20SQLCODE-802-SQLSTATE-22003%E5%8E%9F%E5%9B%A0%E5%89%96%E6%9E%90/"/>
    <id>https://mizhuo.site/DB2%20SQLCODE-802-SQLSTATE-22003%E5%8E%9F%E5%9B%A0%E5%89%96%E6%9E%90/</id>
    <published>2021-02-24T13:25:11.000Z</published>
    <updated>2022-06-24T09:21:23.681Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;今天开发cognos报表，写的SQL语句执行出错，错误如下:&lt;br&gt;&lt;img src=&quot;https://mizhuo-1259163026.cos.ap-chengdu.myqcloud.com/20210224214812.png&quot;&gt;&lt;br&gt;翻译过来就是&lt;code&gt;发生算术溢出或其他算术异常&lt;/code&gt;,网上搜索到的资料也不尽人意,于是自己摸索,查清楚了错误原因,这里记录一下。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://mizhuo.site/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="DB2" scheme="https://mizhuo.site/tags/DB2/"/>
    
  </entry>
  
  <entry>
    <title>5分钟搭建对象存储服务!</title>
    <link href="https://mizhuo.site/5%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E6%9C%8D%E5%8A%A1/"/>
    <id>https://mizhuo.site/5%E5%88%86%E9%92%9F%E6%90%AD%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E6%9C%8D%E5%8A%A1/</id>
    <published>2021-01-15T12:27:45.000Z</published>
    <updated>2022-06-24T09:20:39.370Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;对象存储&quot;&gt;&lt;a href=&quot;#对象存储&quot; class=&quot;headerlink&quot; title=&quot;对象存储&quot;&gt;&lt;/a&gt;对象存储&lt;/h4&gt;&lt;p&gt;对象存储服务用来存储各类文件，一般作用于存储图片。常用的对象存储服务有OSS，像阿里云、腾讯、七牛云等等都有OSS对象存储服务。虽然这些OSS使用也很便捷，但毕竟还是自己搭建的比较香，搭建好了，也不需要连接外网就能使用，安全又方便。&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://mizhuo.site/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://mizhuo.site/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud Stream定时任务</title>
    <link href="https://mizhuo.site/Spring%20Cloud%20Stream%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    <id>https://mizhuo.site/Spring%20Cloud%20Stream%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</id>
    <published>2020-12-30T14:00:47.000Z</published>
    <updated>2021-01-05T13:13:47.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在开发系统的过程中，我们经常会遇到延迟执行任务的需求。比如，在系统中设定两个小时后提醒我做XX事情。对于这样的需求，我们可以使用Spring Cloud Stream搭配消息中间件可以很好的进行处理。&lt;/p&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="SpringCloud" scheme="https://mizhuo.site/tags/SpringCloud/"/>
    
    <category term="RabbitMq" scheme="https://mizhuo.site/tags/RabbitMq/"/>
    
  </entry>
  
  <entry>
    <title>Native关键字</title>
    <link href="https://mizhuo.site/Native%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <id>https://mizhuo.site/Native%E5%85%B3%E9%94%AE%E5%AD%97/</id>
    <published>2020-12-19T12:32:44.000Z</published>
    <updated>2022-06-24T09:22:16.386Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;Native方法&quot;&gt;&lt;a href=&quot;#Native方法&quot; class=&quot;headerlink&quot; title=&quot;Native方法&quot;&gt;&lt;/a&gt;Native方法&lt;/h4&gt;&lt;p&gt;说到&lt;code&gt;native&lt;/code&gt;关键字，大家可能没怎么关注过，但是肯定都见过，在Java很多方法中，都有用&lt;code&gt;native&lt;/code&gt;修饰的方法。&lt;/p&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="Native" scheme="https://mizhuo.site/tags/Native/"/>
    
  </entry>
  
  <entry>
    <title>自定义类加载器</title>
    <link href="https://mizhuo.site/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8/"/>
    <id>https://mizhuo.site/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8/</id>
    <published>2020-12-13T13:55:28.000Z</published>
    <updated>2022-06-24T09:21:14.568Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;类加载器&quot;&gt;&lt;a href=&quot;#类加载器&quot; class=&quot;headerlink&quot; title=&quot;类加载器&quot;&gt;&lt;/a&gt;类加载器&lt;/h4&gt;&lt;p&gt;Java类加载过程，第一步就是通过类加载器加载&lt;code&gt;.class&lt;/code&gt;文件，获取其二进制流,并在内存中创建对象的Class对象。类加载器主要有四种。&lt;/p&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="类加载器" scheme="https://mizhuo.site/tags/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>JVM</title>
    <link href="https://mizhuo.site/JVM/"/>
    <id>https://mizhuo.site/JVM/</id>
    <published>2020-12-10T12:50:22.000Z</published>
    <updated>2020-12-12T11:52:35.000Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;JVM组成部分&quot;&gt;&lt;a href=&quot;#JVM组成部分&quot; class=&quot;headerlink&quot; title=&quot;JVM组成部分&quot;&gt;&lt;/a&gt;JVM组成部分&lt;/h4&gt;&lt;p&gt;JVM即Java虚拟机(Java virtual machine)，其组成部分为:程序计数器(Program Counter Register)、Java虚拟机栈(Java Virtual Machine Stacks)、本地方法栈(Native Method Stack)、Java堆（Java Heap)、方法区(Methed Area)&lt;/p&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="JVM" scheme="https://mizhuo.site/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat性能调优</title>
    <link href="https://mizhuo.site/Tomcat%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/"/>
    <id>https://mizhuo.site/Tomcat%E6%80%A7%E8%83%BD%E8%B0%83%E4%BC%98/</id>
    <published>2020-12-07T14:19:56.000Z</published>
    <updated>2022-06-24T09:22:23.349Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;Tomcat性能优化&quot;&gt;&lt;a href=&quot;#Tomcat性能优化&quot; class=&quot;headerlink&quot; title=&quot;Tomcat性能优化&quot;&gt;&lt;/a&gt;Tomcat性能优化&lt;/h4&gt;&lt;p&gt;Tomcat作为Apache完全开源的Web容器，其轻量级、占用资源小、扩展性等等特性受到开发人员及中小型企业的喜爱和广泛的应用。为了Tomcat能够稳定的运行，因此Tomcat的性能优化也很重要。&lt;/p&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="tomcat" scheme="https://mizhuo.site/tags/tomcat/"/>
    
    <category term="性能优化" scheme="https://mizhuo.site/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hystrix介绍与应用</title>
    <link href="https://mizhuo.site/Hystrix%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    <id>https://mizhuo.site/Hystrix%E4%BB%8B%E7%BB%8D%E4%B8%8E%E5%BA%94%E7%94%A8/</id>
    <published>2020-11-15T09:29:34.000Z</published>
    <updated>2020-11-15T09:29:34.000Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;Hystrix介绍&quot;&gt;&lt;a href=&quot;#Hystrix介绍&quot; class=&quot;headerlink&quot; title=&quot;Hystrix介绍&quot;&gt;&lt;/a&gt;Hystrix介绍&lt;/h4&gt;&lt;p&gt;在说Hystrix之前，就要说到微服务了，所谓微服务，体现在一个微上，它将一个很庞大的独立应用细化到一套小型服务，让每个小服务独立运行。服务之间互相通信。而这也会带来很多问题，其中因为微服务模块太多，每一个模块都可能出错，而出错就可能会导致服务雪崩，使得服务器无法正常运行。而Hystrix是Netflix下的一个开源框架，主要是对请求的延迟或故障进行防护和控制，阻止错误的连锁反应，并提供错误回退和服务降级的功能，有效解决的上述问题。&lt;/p&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="SpringCloud" scheme="https://mizhuo.site/tags/SpringCloud/"/>
    
    <category term="Hystrix" scheme="https://mizhuo.site/tags/Hystrix/"/>
    
  </entry>
  
  <entry>
    <title>使用Consul进行服务注册与发现</title>
    <link href="https://mizhuo.site/%E4%BD%BF%E7%94%A8Consul%E8%BF%9B%E8%A1%8C%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/"/>
    <id>https://mizhuo.site/%E4%BD%BF%E7%94%A8Consul%E8%BF%9B%E8%A1%8C%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/</id>
    <published>2020-11-14T13:47:55.000Z</published>
    <updated>2020-11-15T01:57:55.000Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;Consul介绍&quot;&gt;&lt;a href=&quot;#Consul介绍&quot; class=&quot;headerlink&quot; title=&quot;Consul介绍&quot;&gt;&lt;/a&gt;Consul介绍&lt;/h4&gt;&lt;p&gt;Consul是HashiCorp公司推出的开源工具，使用Go语言开发，所以和Docker完全兼容，部署起来非常容易，Consul具有&lt;code&gt;绿色&lt;/code&gt;、&lt;code&gt;轻量级&lt;/code&gt;的特点。是&lt;code&gt;分布式&lt;/code&gt;的、&lt;code&gt;高可用&lt;/code&gt;的、 &lt;code&gt;可横向扩展&lt;/code&gt;的用于实现分布式系统的服务发现与配置。&lt;/p&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="SpringCloud" scheme="https://mizhuo.site/tags/SpringCloud/"/>
    
    <category term="Consul" scheme="https://mizhuo.site/tags/Consul/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装ELK</title>
    <link href="https://mizhuo.site/Docker%E5%AE%89%E8%A3%85ELK/"/>
    <id>https://mizhuo.site/Docker%E5%AE%89%E8%A3%85ELK/</id>
    <published>2020-11-03T11:07:15.000Z</published>
    <updated>2022-07-08T01:34:50.000Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;使用Dokcer安装配置ELK&quot;&gt;&lt;a href=&quot;#使用Dokcer安装配置ELK&quot; class=&quot;headerlink&quot; title=&quot;使用Dokcer安装配置ELK&quot;&gt;&lt;/a&gt;使用Dokcer安装配置ELK&lt;/h4&gt;&lt;p&gt;ELK是三个开源软件的缩写,分别表示：Elasticsearch,Logstash,Kibana,它们都是开源软件,而这三种服务可以搭建线上日志收集系统。&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://mizhuo.site/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://mizhuo.site/tags/Docker/"/>
    
    <category term="ELK" scheme="https://mizhuo.site/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>部署Vue项目到远程服务器Dokcer下的Nginx</title>
    <link href="https://mizhuo.site/%E9%83%A8%E7%BD%B2Vue%E9%A1%B9%E7%9B%AE%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8Dokcer%E4%B8%8B%E7%9A%84Nginx/"/>
    <id>https://mizhuo.site/%E9%83%A8%E7%BD%B2Vue%E9%A1%B9%E7%9B%AE%E5%88%B0%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8Dokcer%E4%B8%8B%E7%9A%84Nginx/</id>
    <published>2020-10-29T11:57:21.000Z</published>
    <updated>2020-10-29T11:57:21.000Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;使用远程服务器Dokcer的Nginx来部署Vue项目&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://mizhuo.site/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://mizhuo.site/tags/Docker/"/>
    
    <category term="Nginx" scheme="https://mizhuo.site/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>乐观锁和悲观锁</title>
    <link href="https://mizhuo.site/%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%82%B2%E8%A7%82%E9%94%81/"/>
    <id>https://mizhuo.site/%E4%B9%90%E8%A7%82%E9%94%81%E5%92%8C%E6%82%B2%E8%A7%82%E9%94%81/</id>
    <published>2020-08-30T06:16:15.000Z</published>
    <updated>2020-08-30T06:16:15.000Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;乐观锁和悲观锁，顾名思义，乐观锁对数据库永远保持着一种乐观的态度，操作数据库的时候不会对数据加锁，只有到数据提交的时候才去验证数据是否存在冲突，一般是通过加版本号来验证。而悲观锁则是一种悲观的态度，操作数据库时先对数据加锁，然后再去读写数据，在它释放锁之前，任何人都无法操作数据，直到上一个人释放锁，下一个人才能继续抢占锁，然后操作数据。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://mizhuo.site/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="锁" scheme="https://mizhuo.site/tags/%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>git命令大全</title>
    <link href="https://mizhuo.site/git%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <id>https://mizhuo.site/git%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</id>
    <published>2020-08-17T14:30:07.000Z</published>
    <updated>2020-08-17T14:30:07.000Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;Git,是每个程序员必备技能,相较于之前使用的SVN,Git是分布式的,每台电脑本地都有一个仓库,可以离线工作,而SVN断网则无法工作。而且git的分支概念可以很好的管理版本、环境等。也正因为git功能强大,所以要掌握的命令也十分繁多,所以这里记录一下。&lt;/p&gt;</summary>
    
    
    
    <category term="Git" scheme="https://mizhuo.site/categories/Git/"/>
    
    
    <category term="Git" scheme="https://mizhuo.site/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>自定义注解实现Aspect埋点</title>
    <link href="https://mizhuo.site/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3%E5%AE%9E%E7%8E%B0Aspect%E5%9F%8B%E7%82%B9/"/>
    <id>https://mizhuo.site/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B3%A8%E8%A7%A3%E5%AE%9E%E7%8E%B0Aspect%E5%9F%8B%E7%82%B9/</id>
    <published>2020-08-13T14:37:27.000Z</published>
    <updated>2020-08-13T14:37:27.000Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;最近做一个项目,要求服务埋点,保存登录用户的所有操作记录并入库，方便系统报错的时候能够及时发现和重现，也能防止登录人员不遵守系统规范。一想到埋点，常见的方式就是使用AOP切面,自定义一些包或者类和方法进行AOP来记录操作记录。这里记录一下使用自定义注解埋点过程。&lt;/p&gt;</summary>
    
    
    
    <category term="JAVA" scheme="https://mizhuo.site/categories/JAVA/"/>
    
    
    <category term="SpringBoot" scheme="https://mizhuo.site/tags/SpringBoot/"/>
    
    <category term="AOP" scheme="https://mizhuo.site/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>CLOB-&gt;String转换异常的问题</title>
    <link href="https://mizhuo.site/CLOB-%3EString%E8%BD%AC%E6%8D%A2%E5%BC%82%E5%B8%B8%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://mizhuo.site/CLOB-%3EString%E8%BD%AC%E6%8D%A2%E5%BC%82%E5%B8%B8%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2020-08-06T04:36:20.000Z</published>
    <updated>2020-10-29T11:47:32.000Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;今天敲代码遇到一个问题,由于需求需要存放很多筛选条件,后期要根据筛选条件去过滤数据,由于这个筛选器长度比较大,所以我们采取的方案就是数据库建两个字段,类型为CLOB,一个字段用来存放前端传来的JSON条件,另一个字段存放根据JSON拼接出来的SQL条件。但是后面取CLOB字段时,出现了类型转换异常,也就是CLOB无法转换为String,这里记录一下解决方案。&lt;/p&gt;</summary>
    
    
    
    <category term="数据库" scheme="https://mizhuo.site/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据库" scheme="https://mizhuo.site/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装websphere</title>
    <link href="https://mizhuo.site/Docker%E5%AE%89%E8%A3%85websphere/"/>
    <id>https://mizhuo.site/Docker%E5%AE%89%E8%A3%85websphere/</id>
    <published>2020-08-03T14:10:45.000Z</published>
    <updated>2020-08-03T14:10:45.000Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;众所周知,主流的web服务器有Tomcat、Nginx、JBoss、WebSphere、WebLogic等等,我们常用的就是tomat,而webSphere是IBM的产品,需要收费,所以使用不是很广泛,主要在银行等企业使用。这里主要记录一下Docker安装webSphere,用与研究。&lt;/p&gt;</summary>
    
    
    
    <category term="Docker" scheme="https://mizhuo.site/categories/Docker/"/>
    
    
    <category term="Docker" scheme="https://mizhuo.site/tags/Docker/"/>
    
    <category term="websphere" scheme="https://mizhuo.site/tags/websphere/"/>
    
  </entry>
  
</feed>
